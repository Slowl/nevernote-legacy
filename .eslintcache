[{"/home/hedi/Projects/perso/nevernote/src/index.js":"1","/home/hedi/Projects/perso/nevernote/src/App.jsx":"2","/home/hedi/Projects/perso/nevernote/src/serviceWorker.js":"3","/home/hedi/Projects/perso/nevernote/src/config/colors.js":"4","/home/hedi/Projects/perso/nevernote/src/config/firebase.js":"5","/home/hedi/Projects/perso/nevernote/src/components/NoteNav.jsx":"6","/home/hedi/Projects/perso/nevernote/src/components/NoteEditor.jsx":"7","/home/hedi/Projects/perso/nevernote/src/components/Note.jsx":"8","/home/hedi/Projects/perso/nevernote/src/components/PopupBox.jsx":"9","/home/hedi/Projects/perso/nevernote/src/components/TitleInput.jsx":"10","/home/hedi/Projects/perso/nevernote/src/components/NoteInput.jsx":"11","/home/hedi/Projects/perso/nevernote/src/components/Toast.jsx":"12","/home/hedi/Projects/perso/nevernote/src/components/ContentEditable.jsx":"13","/home/hedi/Projects/perso/nevernote/src/providers/userProvider.js":"14","/home/hedi/Projects/perso/nevernote/src/pages/Login.jsx":"15","/home/hedi/Projects/perso/nevernote/src/pages/MainApp.jsx":"16"},{"size":454,"mtime":1609419135337,"results":"17","hashOfConfig":"18"},{"size":350,"mtime":1609435498472,"results":"19","hashOfConfig":"18"},{"size":4951,"mtime":1609415251420,"results":"20","hashOfConfig":"18"},{"size":1705,"mtime":1609415251420,"results":"21","hashOfConfig":"18"},{"size":929,"mtime":1609435771061,"results":"22","hashOfConfig":"18"},{"size":4728,"mtime":1609431312440,"results":"23","hashOfConfig":"18"},{"size":1399,"mtime":1609415270720,"results":"24","hashOfConfig":"18"},{"size":2686,"mtime":1609415251420,"results":"25","hashOfConfig":"18"},{"size":3501,"mtime":1609415251420,"results":"26","hashOfConfig":"18"},{"size":2239,"mtime":1609415251420,"results":"27","hashOfConfig":"18"},{"size":222,"mtime":1609415251420,"results":"28","hashOfConfig":"18"},{"size":1068,"mtime":1609415251420,"results":"29","hashOfConfig":"18"},{"size":4315,"mtime":1609415251420,"results":"30","hashOfConfig":"18"},{"size":631,"mtime":1609435868147,"results":"31","hashOfConfig":"18"},{"size":2210,"mtime":1609435961253,"results":"32","hashOfConfig":"18"},{"size":6999,"mtime":1609436975094,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"cu9dso",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},"/home/hedi/Projects/perso/nevernote/src/index.js",[],["69","70"],"/home/hedi/Projects/perso/nevernote/src/App.jsx",[],"/home/hedi/Projects/perso/nevernote/src/serviceWorker.js",[],"/home/hedi/Projects/perso/nevernote/src/config/colors.js",[],"/home/hedi/Projects/perso/nevernote/src/config/firebase.js",[],"/home/hedi/Projects/perso/nevernote/src/components/NoteNav.jsx",[],"/home/hedi/Projects/perso/nevernote/src/components/NoteEditor.jsx",[],"/home/hedi/Projects/perso/nevernote/src/components/Note.jsx",[],"/home/hedi/Projects/perso/nevernote/src/components/PopupBox.jsx",[],"/home/hedi/Projects/perso/nevernote/src/components/TitleInput.jsx",[],"/home/hedi/Projects/perso/nevernote/src/components/NoteInput.jsx",[],"/home/hedi/Projects/perso/nevernote/src/components/Toast.jsx",[],"/home/hedi/Projects/perso/nevernote/src/components/ContentEditable.jsx",[],["71","72"],"/home/hedi/Projects/perso/nevernote/src/providers/userProvider.js",[],"/home/hedi/Projects/perso/nevernote/src/pages/Login.jsx",[],"/home/hedi/Projects/perso/nevernote/src/pages/MainApp.jsx",["73"],"import styled, { ThemeProvider } from 'styled-components'\nimport { useState, useEffect, useContext } from 'react'\nimport { useNavigate } from \"@reach/router\"\nimport localforage from 'localforage'\nimport Swipe from 'react-easy-swipe'\nimport { UserContext } from \"../providers/userProvider\"\nimport { firestore, logOut } from '../config/firebase'\nimport { LIGHT, DARK } from '../config/colors.js'\nimport { FiChevronRight } from \"react-icons/fi\"\n\nimport NoteNav from '../components/NoteNav'\nimport NoteEditor from '../components/NoteEditor'\n\n\nconst NotesContainer = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Hind+Madurai:wght@300;400;500&display=swap');\n  width: 100vw;\n  min-width: 100vw;\n  max-width: 100vw;\n  height: 100vh;\n  min-height: 100vh;\n  max-height: 100vh;\n  display: flex;\n  overflow: hidden;\n  background-color: ${props => props.theme.white};\n  transition: all ease .4s;\n`\n\nconst SwipeIndicator = styled.div`\n  display: none;\n\n  @media screen and (max-width: 45em) {\n    z-index: 1000;\n    display: block;\n    position: absolute;\n    background-color: ${props => props.open ? `${props.theme.navbg}` : `${props.theme.white}`};\n    border-radius: 40px;\n    width: 25px;\n    height: 25px;\n    right: ${props => props.open ? `-4px` : `calc(${props.windowWidth}px - 24px)`};\n    top: 50%;\n    transform: ${props => props.open ? \"rotate(180deg)\" : \"rotate(0deg)\"};\n    transition: all .6s;\n\n    svg {\n      padding: .12em .1em .1em .25em;\n      color: ${props => props.theme.grey6};\n      font-size: 1.15em;\n    }\n  }\n`\n\nconst MainApp = () => {\n\n  const navigate = useNavigate()\n  const user = useContext(UserContext)\n  const [ redirectPath, setRedirectPath ] = useState(null)\n  const [ title, setTitle ] = useState('')\n  const [ note, setNote ] = useState('')\n  const [ marked, setMarked ] = useState(false)\n  const [ data, setData ] = useState([])\n  const [ usedId, setUsedId ] = useState(undefined)\n  const [ done, setReqState ] = useState(false)\n  const [ action, setAction ] = useState('')\n  const [ filterIndicator, setFilterIndicator ] = useState('')\n  const [ theme, setTheme ] = useState(DARK)\n  const [ isLight, setThemeIsLight ] = useState(false)\n  const [ isSwiped, setSwipe ] = useState(true)\n  const [ windowWidth, setWindowsWidth ] = useState(0)\n\n  const db = firestore\n  const notes = db.collection('notes')\n\n  const Requestor = () => {\n    notes.get()\n    .then((querySnapshot) => {\n      let allNotes = []\n      querySnapshot.forEach((items) => {\n        const reqData = items.data()\n        allNotes.push(reqData)\n      })\n      setData(allNotes.sort((a,b) => {\n        setFilterIndicator('UPDATE')\n        return b.modifiedAt - a.modifiedAt\n      }))\n    })\n  }\n\n  useEffect(() => {\n    Requestor()\n    setWindowsWidth(window.innerWidth)\n    localforage.getItem('localTheme').then(val => {\n      val !== null && setTheme(val)\n      if(JSON.stringify(val) === JSON.stringify(DARK)){\n        setThemeIsLight(false)\n      } else {\n        setThemeIsLight(true)\n      }\n    })\n    !user && setRedirectPath(\"/\")\n  }, [])\n\n  if (redirectPath) {\n    navigate(redirectPath)\n  }\n\n  const themeSwitcher = () => {\n    if(JSON.stringify(theme) === JSON.stringify(DARK)){\n      setTheme(LIGHT)\n      setThemeIsLight(true)\n      localforage.setItem('localTheme', LIGHT)\n    } else {\n      setTheme(DARK)\n      setThemeIsLight(false)\n      localforage.setItem('localTheme', DARK)\n    }\n  }\n\n  const filterByModifDate = () => {\n    setData([...data].sort((a,b) => {\n      setFilterIndicator('UPDATE')\n      return b.modifiedAt - a.modifiedAt\n    }))\n  }\n\n  const filterByCreaDate = () => {\n    setData([...data].sort((a,b) => {\n      setFilterIndicator('CREATION')\n      return b.createdAt - a.createdAt\n    }))\n  }\n\n  const filterByMarked = () => {\n    setData([...data].sort((a,b) => {\n      setFilterIndicator('MARKED')\n      return b.marked - a.marked\n    }))\n  }\n\n  const Resetor = () => {\n    setTitle('')\n    setNote('')\n    setUsedId(undefined)\n    onSwipeLeft()\n  }\n\n  const onSwipeRight = () => {\n    setSwipe(true)\n  }\n\n  const onSwipeLeft = () => {\n    setSwipe(false)\n  }\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value.toUpperCase())\n  }\n\n  const handleMark = value => {\n    setMarked(value)\n  }\n\n  const handleNoteChange = e => {\n    setNote(e.target.value)\n  }\n\n  const sendOrUpdate = async () => {\n    if (!!title && usedId === undefined) {\n      const id = Math.random().toString(36).slice(2).padEnd(11,0)\n      handleToast('Added', false)\n      db.collection(\"notes\").doc(id).set({id: id, title: title, note: note, marked: marked, createdAt: Date.now(), modifiedAt: Date.now() })\n      Requestor()\n      Resetor()\n      handleToast('Added', true)\n    } else if (!!usedId) {\n      handleToast('Updated', false)\n      db.collection(\"notes\").doc(usedId).update({\n        title: title,\n        note: note,\n        marked: marked,\n        modifiedAt: Date.now()\n      })\n      .then(\n        Requestor(),\n        handleToast('Updated', true)\n      )\n    }\n  }\n\n  const handleNoteClick = (clickedTitle, clickedNote, clickedMark, clickedId) => {\n    setTitle(clickedTitle)\n    setNote(clickedNote)\n    setMarked(clickedMark)\n    setUsedId(clickedId)\n    onSwipeLeft()\n  }\n\n  const handleDeleteNote = async (deleteId) => {\n    await handleToast('Deleted', false)\n    db.collection(\"notes\").doc(deleteId).delete()\n    .then( () => deleteId === usedId ? (Requestor(), Resetor(), handleToast('Deleted', true)) : Requestor(), handleToast('Deleted', true))\n  }\n\n  const handleToast = (text, reqState) => {\n    setAction(text)\n    setReqState(reqState)\n    setTimeout(() => {\n      setReqState(!reqState)\n    }, 1500)\n  }\n\n  return (\n      <ThemeProvider theme={theme}>\n        <Swipe\n          onSwipeLeft={onSwipeLeft}\n          onSwipeRight={onSwipeRight}\n          tolerance={100}\n        >\n          <NotesContainer>\n            <SwipeIndicator open={isSwiped} windowWidth={windowWidth}><FiChevronRight /></SwipeIndicator>\n            <NoteNav\n              data={data}\n              onNoteClick={handleNoteClick}\n              onDeleteClick={handleDeleteNote}\n              reset={() => Resetor()}\n              creationFilter={filterByCreaDate}\n              updateFilter={filterByModifDate}\n              markedFilter={filterByMarked}\n              filterValue={filterIndicator}\n              switchTheme={themeSwitcher}\n              themeValue={isLight}\n              swipe={isSwiped}\n              windowWidth={windowWidth}\n              logOut={logOut}\n            />\n            <NoteEditor\n              onTitleChange={handleTitleChange}\n              onNoteChange={handleNoteChange}\n              onClickMark={handleMark}\n              onClickSend={() => sendOrUpdate()}\n              note={note}\n              title={title}\n              marked={marked}\n              reqState={done}\n              action={action}\n            />\n          </NotesContainer>\n        </Swipe>\n\n      </ThemeProvider>\n  )\n}\n\nexport default MainApp\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":101,"column":6,"nodeType":"82","endLine":101,"endColumn":8,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Requestor' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [Requestor, user]",{"range":"89","text":"90"},[3062,3064],"[Requestor, user]"]